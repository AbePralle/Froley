class SimpleCmd
  PROPERTIES
    t : SimpleToken

  METHODS
    method init( t, args:SimpleCmdInitArgs )
      args.require_count( 0 )
endClass

class SimpleCmdStatements : SimpleCmd[]
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      add( forEach in args )
endClass

class SimpleCmdArgs : SimpleCmd[]
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      add( forEach in args )
endClass

class SimpleCmdUnary( t, operand:SimpleCmd ) : SimpleCmd
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      args.require_count( 1 )
      operand = args.first

    method op->String
      throw UnsupportedOperationError()

    method to->String
      return "($$)" (op,operand)
endClass

class SimpleCmdPostUnary : SimpleCmdUnary
  METHODS
    method to->String
      return "($$)" (operand,op)
endClass

class SimpleCmdBinary( t, left:SimpleCmd, right:SimpleCmd ) : SimpleCmd
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      args.require_count( 2 )
      left = args.first
      right = args.last

    method op->String
      throw UnsupportedOperationError()

    method to->String
      return "($ $ $)" (left,op,right)
endClass



class SimpleCmdAssign : SimpleCmdBinary
  METHODS
    method op->String
      return "="
endClass

class SimpleCmdAdd : SimpleCmdBinary
  METHODS
    method op->String
      return "+"
endClass

class SimpleCmdSubtract : SimpleCmdBinary
  METHODS
    method op->String
      return "-"
endClass

class SimpleCmdMultiply : SimpleCmdBinary
  METHODS
    method op->String
      return "*"
endClass

class SimpleCmdDivide : SimpleCmdBinary
  METHODS
    method op->String
      return "/"
endClass

class SimpleCmdPower : SimpleCmdBinary
  METHODS
    method op->String
      return "^"
endClass

class SimpleCmdNegate : SimpleCmdUnary
  METHODS
    method op->String
      return "-"
endClass

class SimpleCmdAccess( t, name:String) : SimpleCmd
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      prior.init( t, args )
      name = t.content->String

    method to->String
      return name
endClass

class SimpleCmdLiteralInt32( t, value:Int32) : SimpleCmd
  METHODS
    method init( t, args:SimpleCmdInitArgs )
      prior.init( t, args )
      value = t.content->Int32

    method to->String
      return value->String
endClass
