[whitespace]
SPACE ' '
TAB   '\t'
EOL   '\n'

[tokens]
IDENTIFIER identifier [content]
INTEGER    integer    [content]

[keywords]

[symbols]
SYMBOL_ASTERISK             *
SYMBOL_CARET                ^
SYMBOL_CLOSE_PAREN          )
SYMBOL_EQUALS               =
SYMBOL_MINUS                -
SYMBOL_OPEN_PAREN           (
SYMBOL_PLUS                 +
SYMBOL_SLASH                /

[tokenizer]
<<tokenize>>
which (input)
  discardAny [whitespace]
endWhich

<whitespace_consumed>
markSourcePosition
if (not hasAnother) halt

if (scanIdentifier)
  which (buffer)
    produceAny [keywords]
    others: produce IDENTIFIER
  endWhich
endIf

which (input)
  produceAny [symbols]
  case '#'
    # Single-line comment
    ch = read
    while (ch != '\n') ch = read
    discard
  others
    ch = peek
    if (ch is digit)
      scan_integer
      produce INTEGER
    endIf
endWhich

clear buffer
collect "Syntax error - unexpected '"
ch = peek
collect ch
collect "'."
error buffer

<scan_integer>
while (ch is digit or ch == '_')
  ch = read
  if (ch != '_') collect ch
  if (not hasAnother) return
  ch = peek
endWhile
return


[parser]
- expression

+ assign : RightAssociativeBinaryParseRule
  on "=" -> CmdAssign

+ add_subtract : BinaryParseRule
  on "+" -> CmdAdd
  on "-" -> CmdSubtract

+ multiply_divide : BinaryParseRule
  on "*" -> CmdMultiply
  on "/" -> CmdDivide

+ power : BinaryParseRule
  on "^" -> CmdPower

+ pre_unary : PreUnaryParseRule
  on "-" -> CmdNegate

+ term
  on IDENTIFIER -> CmdAccess( name=t.content:String )
  on INTEGER    -> CmdLiteralInt32( value=t.content:Int32 )
  on "("
    expression
    mustConsume ")"
    return
  endOn
  syntaxError

