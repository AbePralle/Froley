augment RogueTemplate
  PROPERTIES
    cmd =
      @|module FroleyLanguage
       |
       |class Cmd
       |  PROPERTIES
       |    t : Token
       |
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 0 )
       |
       |    method dispatch( visitor:Visitor )->Cmd [propagated]
       |      return visitor.visit( this )
       |endClass
       |
       |class CmdList : Cmd
       |  PROPERTIES
       |    list : Cmd[]
       |
       |  METHODS
       |    method init( t )
       |      list = Cmd[](5)
       |
       |    method init( t, args:CmdInitArgs )
       |      list = Cmd[]( args.count )
       |      list.add( forEach in args )
       |
       |    method add( cmd:Cmd )
       |      list.add( cmd )
       |
       |    method count->Int32
       |      return list.count
       |
       |    method first->Cmd
       |      return list.first
       |
       |    method get( index:Int32 )->Cmd
       |      return list[ index ]
       |
       |    method last->Cmd
       |      return list.last
       |
       |    method set( index:Int32, value:Cmd )->this
       |      list[ index ] = value
       |      return this
       |
       |    method to->String
       |      return list->String
       |endClass
       |
       |class Unary( t, operand:Cmd ) : Cmd
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 1 )
       |      operand = args.first
       |
       |    method op->String
       |      throw UnsupportedOperationError()
       |
       |    method to->String
       |      local op = this.op
       |      local space = which{ op.count and op[op.count-1].is_letter:" " || "" }
       |      return "($$)" (op,operand)
       |endClass
       |
       |class PostUnary : Unary
       |  METHODS
       |    method to->String
       |      local op = this.op
       |      local space = which{ op.count and op[0].is_letter:" " || "" }
       |      return "($$)" (operand,op)
       |endClass
       |
       |class Binary( t, left:Cmd, right:Cmd ) : Cmd
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 2 )
       |      left = args.first
       |      right = args.last
       |
       |    method op->String
       |      throw UnsupportedOperationError()
       |
       |    method to->String
       |      return "($ $ $)" (left,op,right)
       |endClass
endAugment

