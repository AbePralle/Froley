augment RogueTemplate
  PROPERTIES
    cmd =
      @|module FroleyLanguage
       |
       |class Cmd
       |  PROPERTIES
       |    t : Token
       |
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 0 )
       |
       |    method dispatch( visitor:Visitor )->Cmd
       |      return visitor.visit( this )
       |
       |    method to->String
       |      local result = StringBuilder()
       |      write( result )
       |      return result->String
       |
       |    method write( builder:StringBuilder )
       |      builder.print( type_name.after_any("Cmd") )
       |
       |    method write( cmd:Cmd, builder:StringBuilder )
       |      if (cmd) cmd.write( builder )
       |      else      builder.print( "null" )
       |endClass
       |
       |class CmdList : Cmd
       |  PROPERTIES
       |    list : Cmd[]
       |
       |  METHODS
       |    method init( t )
       |      list = Cmd[](5)
       |
       |    method init( t, args:CmdInitArgs )
       |      list = Cmd[]( args.count )
       |      list.add( forEach in args )
       |
       |    method count->Int32
       |      return list.count
       |
       |    method dispatch( visitor:Visitor )->CmdList
       |      return visitor.visit( this )
       |
       |    method first->Cmd
       |      return list.first
       |
       |    method get( index:Int32 )->Cmd
       |      return list[ index ]
       |
       |    method last->Cmd
       |      return list.last
       |
       |    method set( index:Int32, value:Cmd )->this
       |      list[ index ] = value
       |      return this
       |
       |    method write( builder:StringBuilder )
       |      builder.print( '[' )
       |      forEach (arg at index in list)
       |        if (index > 0) builder.print( ',' )
       |        write( arg, builder )
       |      endForEach
       |      builder.print( ']' )
       |endClass
       |
       |class Statements : CmdList
       |  METHODS
       |    method dispatch( visitor:Visitor )->Statements
       |      return visitor.visit( this )
       |
       |    method write( builder:StringBuilder )
       |      forEach (statement in list)
       |        write( statement, builder )
       |        builder.println
       |      endForEach
       |endClass
       |
       |class Unary( t, operand:Cmd ) : Cmd
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 1 )
       |      operand = args.first
       |
       |    method dispatch( visitor:Visitor )->Unary
       |      return visitor.visit( this )
       |
       |    method op->String
       |      throw UnsupportedOperationError()
       |
       |    method write( builder:StringBuilder )
       |      builder.print( '(' ).print( op )
       |      write( operand, builder )
       |      builder.print( ')' )
       |endClass
       |
       |class PostUnary : Unary
       |  METHODS
       |    method dispatch( visitor:Visitor )->PostUnary
       |      return visitor.visit( this )
       |
       |    method write( builder:StringBuilder )
       |      builder.print( '(' )
       |      write( operand, builder )
       |      builder.print( op ).print( ')' )
       |endClass
       |
       |class Binary( t, left:Cmd, right:Cmd ) : Cmd
       |  METHODS
       |    method init( t, args:CmdInitArgs )
       |      args.require_count( 2 )
       |      left = args.first
       |      right = args.last
       |
       |    method dispatch( visitor:Visitor )->Binary
       |      return visitor.visit( this )
       |
       |    method op->String
       |      throw UnsupportedOperationError()
       |
       |    method write( builder:StringBuilder )
       |      builder.print( '(' )
       |      write( left, builder )
       |      builder.print( ' ' ).print( op ).print( ' ' )
       |      write( right, builder )
       |      builder.print( ')' )
       |endClass
endAugment

