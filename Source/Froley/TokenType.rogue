module Froley
  uses ParseKit<<Froley>>

augment TokenType
  EOI( "eoi", "[end of input]", &is_structural )
  EOL( "\n", "[end of line]", &is_symbol )
  IDENTIFIER( "identifier" )
  INTEGER( "integer value" )
  STRING( "literal string" )
  LABEL( "label" )

  KEYWORD_ACCEPT         ( "accept",           &is_keyword )
  KEYWORD_ACCEPT_ALL     ( "acceptAll",        &is_keyword, &is_structural )
  KEYWORD_BASE           ( "base",             &is_keyword )
  KEYWORD_BUFFER         ( "buffer",           &is_keyword )
  KEYWORD_CASE           ( "case",             &is_keyword, &is_structural )
  KEYWORD_CH             ( "ch",               &is_keyword )
  KEYWORD_CLEAR          ( "clear",            &is_keyword )
  KEYWORD_COLLECT        ( "collect",          &is_keyword )
  KEYWORD_CONSUME        ( "consume",          &is_keyword )
  KEYWORD_COUNT          ( "count",            &is_keyword )
  KEYWORD_CALL           ( "call",             &is_keyword )
  KEYWORD_DIGIT          ( "digit",            &is_keyword )
  KEYWORD_DISCARD        ( "discard",          &is_keyword )
  KEYWORD_DISCARD_ALL    ( "discardAll",       &is_keyword, &is_structural )
  KEYWORD_ERROR          ( "error",            &is_keyword )
  KEYWORD_ELSE           ( "else",             &is_keyword, &is_structural )
  KEYWORD_ELSE_IF        ( "elseIf",           &is_keyword, &is_structural )
  KEYWORD_END_IF         ( "endIf",            &is_keyword, &is_structural )
  KEYWORD_END_SCAN_TABLE ( "endScanTable",     &is_keyword, &is_structural )
  KEYWORD_END_WHILE      ( "endWhile",         &is_keyword, &is_structural )
  KEYWORD_GOTO           ( "goto",             &is_keyword )
  KEYWORD_HALT           ( "halt",             &is_keyword )
  KEYWORD_HANDLE         ( "handle",           &is_keyword, &is_structural )
  KEYWORD_HAS_ANOTHER    ( "hasAnother",       &is_keyword )
  KEYWORD_IF             ( "if",               &is_keyword )
  KEYWORD_LETTER         ( "letter",           &is_keyword )
  KEYWORD_MODE           ( "mode",             &is_keyword )
  KEYWORD_NOT            ( "not",              &is_keyword )
  KEYWORD_OTHERS         ( "others",           &is_keyword, &is_structural )
  KEYWORD_PEEK           ( "peek",             &is_keyword )
  KEYWORD_PRINT          ( "print",            &is_keyword )
  KEYWORD_POP            ( "pop",              &is_keyword )
  KEYWORD_PUSH           ( "push",             &is_keyword )
  KEYWORD_READ           ( "read",             &is_keyword )
  KEYWORD_RESTART        ( "restart",          &is_keyword )
  KEYWORD_SCAN_DIGITS    ( "scanDigits",       &is_keyword )
  KEYWORD_SCAN_TABLE     ( "scanTable",        &is_keyword )
  KEYWORD_RETURN         ( "return",           &is_keyword )
  KEYWORD_WHILE          ( "while",            &is_keyword )

  SYMBOL_ASTERISK        ( "*",   &is_symbol )
  SYMBOL_CLOSE_BRACKET   ( "]",   &is_symbol, &is_structural )
  SYMBOL_CLOSE_CURLY     ( "}",   &is_symbol, &is_structural )
  SYMBOL_CLOSE_PAREN     ( ")",   &is_symbol, &is_structural )
  SYMBOL_COLON           ( ":",   &is_symbol )
  SYMBOL_COMMA           ( ",",   &is_symbol )
  SYMBOL_DOT_DOT         ( "..",  &is_symbol )
  SYMBOL_EQUALS          ( "=",   &is_symbol )
  SYMBOL_EQUALS_EQUALS   ( "==",  &is_symbol )
  SYMBOL_GE              ( ">=",  &is_symbol )
  SYMBOL_GT              ( ">",   &is_symbol )
  SYMBOL_LE              ( "<=",  &is_symbol )
  SYMBOL_LT              ( "<",   &is_symbol )
  SYMBOL_MINUS_EQUALS    ( "-=",  &is_symbol )
  SYMBOL_MINUS_MINUS     ( "--",  &is_symbol )
  SYMBOL_NOT_EQUAL       ( "!=",  &is_symbol )
  SYMBOL_OPEN_BRACKET    ( "[",   &is_symbol )
  SYMBOL_OPEN_CURLY      ( "{",   &is_symbol )
  SYMBOL_OPEN_PAREN      ( "(",   &is_symbol )
  SYMBOL_PLUS_EQUALS     (  "+=", &is_symbol )
  SYMBOL_PLUS_PLUS       ( "++",  &is_symbol )
  SYMBOL_SEMICOLON       ( ";",   &is_symbol )
  SYMBOL_VERTICAL_BAR    ( "|",   &is_symbol )
endAugment

