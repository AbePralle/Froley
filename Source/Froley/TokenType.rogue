module Froley
  uses ParseKit<<Froley>>

augment TokenType
  EOI( "eoi", "[end of input]", &is_structural )
  EOL( "\n", "[end of line]", &is_symbol )
  IDENTIFIER( "identifier" )
  INTEGER( "integer value" )
  STRING( "literal string" )
  LABEL( "label" )

  KEYWORD_A          ( "a",           &is_keyword )
  KEYWORD_C          ( "c",           &is_keyword )
  KEYWORD_CALL       ( "call",        &is_keyword )
  KEYWORD_ELSE_IF    ( "elseIf",      &is_keyword, &is_structural )
  KEYWORD_END_IF     ( "endIf",       &is_keyword, &is_structural )
  KEYWORD_END_WHILE  ( "endWhile",    &is_keyword, &is_structural )
  KEYWORD_IF         ( "if",          &is_keyword )
  KEYWORD_GOTO       ( "goto",        &is_keyword )
  KEYWORD_HALT       ( "halt",        &is_keyword )
  KEYWORD_HAS_ANOTHER( "has_another", &is_keyword )
  KEYWORD_PRINT      ( "print",       &is_keyword )
  KEYWORD_POP        ( "pop",         &is_keyword )
  KEYWORD_PUSH       ( "push",        &is_keyword )
  KEYWORD_READ       ( "read",        &is_keyword )
  KEYWORD_RETURN     ( "return",      &is_keyword )
  KEYWORD_TEST       ( "test",        &is_keyword )
  KEYWORD_WHILE      ( "while",       &is_keyword )

  SYMBOL_EQUALS      ( "=",   &is_symbol )
  SYMBOL_GT          ( ">",   &is_symbol )
  SYMBOL_LT          ( "<",   &is_symbol )
  SYMBOL_MINUS_EQUALS( "-=",  &is_symbol )
  SYMBOL_MINUS_MINUS ( "--",  &is_symbol )
  SYMBOL_OPEN_PAREN  ( "(",   &is_symbol )
  SYMBOL_CLOSE_PAREN ( ")",   &is_symbol, &is_structural )
  SYMBOL_PLUS_EQUALS (  "+=", &is_symbol )
  SYMBOL_PLUS_PLUS   ( "++",  &is_symbol )
  SYMBOL_SEMICOLON   ( ";",   &is_symbol )
endAugment

