module Froley
  uses ParseKit<<Froley>>

augment TokenType
  EOI( "eoi", "[end of input]", &is_structural )
  EOL( "\n", "[end of line]", &is_symbol )
  IDENTIFIER( "identifier" )
  INTEGER( "integer value" )
  STRING( "literal string" )
  LABEL( "label" )
  TAG( "@tag" )

  KEYWORD_AND               ( "and",                  &is_keyword )
  KEYWORD_BASE              ( "base",                 &is_keyword )
  KEYWORD_BEGIN_LIST        ( "beginList",            &is_keyword )
  KEYWORD_BUFFER            ( "buffer",               &is_keyword )
  KEYWORD_BUFFER_TO_LC      ( "bufferToLowercase",    &is_keyword )
  KEYWORD_CASE              ( "case",                 &is_keyword, &is_structural )
  KEYWORD_CH                ( "ch",                   &is_keyword )
  KEYWORD_CLEAR             ( "clear",                &is_keyword )
  KEYWORD_COLLECT           ( "collect",              &is_keyword )
  KEYWORD_CONSUME           ( "consume",              &is_keyword )
  KEYWORD_COUNT             ( "count",                &is_keyword )
  KEYWORD_CREATE            ( "create",               &is_keyword )
  KEYWORD_CREATE_NULL       ( "createNull",           &is_keyword )
  KEYWORD_CREATE_LIST       ( "createList",           &is_keyword )
  KEYWORD_CREATE_STATEMENTS ( "createStatements",     &is_keyword )
  KEYWORD_DIGIT             ( "digit",                &is_keyword )
  KEYWORD_DISCARD           ( "discard",              &is_keyword )
  KEYWORD_DISCARD_ANY       ( "discardAny",           &is_keyword, &is_structural )
  KEYWORD_DISCARD_POSITION  ( "discardPosition",      &is_keyword )
  KEYWORD_ELSE              ( "else",                 &is_keyword, &is_structural )
  KEYWORD_ELSE_IF           ( "elseIf",               &is_keyword, &is_structural )
  KEYWORD_ELSE_ON           ( "elseOn",               &is_keyword, &is_structural )
  KEYWORD_ELSE_ON_PEEK      ( "elseOnPeek",           &is_keyword, &is_structural )
  KEYWORD_END_IF            ( "endIf",                &is_keyword, &is_structural )
  KEYWORD_END_ON            ( "endOn",                &is_keyword, &is_structural )
  KEYWORD_END_WHICH         ( "endWhich",             &is_keyword, &is_structural )
  KEYWORD_END_WHILE         ( "endWhile",             &is_keyword, &is_structural )
  KEYWORD_FALSE             ( "false",                &is_keyword )
  KEYWORD_GOTO              ( "goto",                 &is_keyword )
  KEYWORD_HALT              ( "halt",                 &is_keyword )
  KEYWORD_HANDLE            ( "handle",               &is_keyword, &is_structural )
  KEYWORD_HAS_ANOTHER       ( "hasAnother",           &is_keyword )
  KEYWORD_IF                ( "if",                   &is_keyword )
  KEYWORD_INPUT             ( "input",                &is_keyword )
  KEYWORD_IS                ( "is",                   &is_keyword )
  KEYWORD_LETTER            ( "letter",               &is_keyword )
  KEYWORD_MARK_SRC_POS      ( "markSourcePosition",   &is_keyword )
  KEYWORD_MODE              ( "mode",                 &is_keyword )
  KEYWORD_MUST_CONSUME      ( "mustConsume",          &is_keyword )
  KEYWORD_NEXT_HAS_ATTRIBUTE( "nextHasAttribute",     &is_keyword )
  KEYWORD_NEXT_IS           ( "nextIs",               &is_keyword )
  KEYWORD_NO_ACTION         ( "noAction",             &is_keyword )
  KEYWORD_NOT               ( "not",                  &is_keyword )
  #KEYWORD_NULL             ( "null",                 &is_keyword )
  KEYWORD_ON                ( "on",                   &is_keyword )
  KEYWORD_ON_PEEK           ( "onPeek",               &is_keyword )
  KEYWORD_OTHERS            ( "others",               &is_keyword, &is_structural )
  KEYWORD_OR                ( "or",                   &is_keyword )
  KEYWORD_PEEK              ( "peek",                 &is_keyword )
  KEYWORD_PRINT             ( "print",                &is_keyword )
  KEYWORD_PRINTLN           ( "println",              &is_keyword )
  KEYWORD_POP               ( "pop",                  &is_keyword )
  KEYWORD_PRODUCE           ( "produce",              &is_keyword )
  KEYWORD_PRODUCE_ANY       ( "produceAny",           &is_keyword, &is_structural )
  KEYWORD_PRODUCE_LIST      ( "produceList",          &is_keyword )
  KEYWORD_PRODUCE_NULL      ( "produceNull",          &is_keyword )
  KEYWORD_PRODUCE_STATEMENTS( "produceStatements",    &is_keyword )
  KEYWORD_PUSH              ( "push",                 &is_keyword )
  KEYWORD_READ              ( "read",                 &is_keyword )
  KEYWORD_RESTART           ( "restart",              &is_keyword )
  KEYWORD_RESTORE_POSITION  ( "restorePosition",      &is_keyword )
  KEYWORD_RETURN            ( "return",               &is_keyword )
  KEYWORD_SAVE_POSITION     ( "savePosition",         &is_keyword )
  KEYWORD_SCAN_DIGITS       ( "scanDigits",           &is_keyword )
  KEYWORD_SCAN_IDENTIFIER   ( "scanIdentifier",       &is_keyword )
  KEYWORD_SWAP              ( "swap",                 &is_keyword )
  KEYWORD_SYNTAX_ERROR      ( "syntaxError",          &is_keyword )
  KEYWORD_TRACE             ( "trace",                &is_keyword )
  KEYWORD_TRUE              ( "true",                 &is_keyword )
  KEYWORD_VAR               ( "var",                  &is_keyword )
  KEYWORD_WHICH             ( "which",                &is_keyword )
  KEYWORD_WHILE             ( "while",                &is_keyword )
  KEYWORD_WITH              ( "with",                 &is_keyword )

  SYMBOL_ARROW              ( "->",  &is_symbol )
  SYMBOL_ASTERISK           ( "*",   &is_symbol )
  SYMBOL_AT                 ( "@",   &is_symbol )
  SYMBOL_CLOSE_BRACKET      ( "]",   &is_symbol, &is_structural )
  SYMBOL_CLOSE_CURLY        ( "}",   &is_symbol, &is_structural )
  SYMBOL_CLOSE_PAREN        ( ")",   &is_symbol, &is_structural )
  SYMBOL_COLON              ( ":",   &is_symbol )
  SYMBOL_COMMA              ( ",",   &is_symbol )
  SYMBOL_DOT                ( ".",   &is_symbol )
  SYMBOL_DOT_DOT            ( "..",  &is_symbol )
  SYMBOL_EQUALS             ( "=",   &is_symbol )
  SYMBOL_EQUALS_EQUALS      ( "==",  &is_symbol )
  SYMBOL_GE                 ( ">=",  &is_symbol )
  SYMBOL_GT                 ( ">",   &is_symbol )
  SYMBOL_LE                 ( "<=",  &is_symbol )
  SYMBOL_LT                 ( "<",   &is_symbol )
  SYMBOL_MINUS              ( "-",   &is_symbol )
  SYMBOL_MINUS_EQUALS       ( "-=",  &is_symbol )
  SYMBOL_MINUS_MINUS        ( "--",  &is_symbol )
  SYMBOL_NOT_EQUAL          ( "!=",  &is_symbol )
  SYMBOL_OPEN_BRACKET       ( "[",   &is_symbol )
  SYMBOL_OPEN_CURLY         ( "{",   &is_symbol )
  SYMBOL_OPEN_PAREN         ( "(",   &is_symbol )
  SYMBOL_PLUS               ( "+",   &is_symbol )
  SYMBOL_PLUS_EQUALS        ( "+=",  &is_symbol )
  SYMBOL_PLUS_PLUS          ( "++",  &is_symbol )
  SYMBOL_SEMICOLON          ( ";",   &is_symbol )
  SYMBOL_VERTICAL_BAR       ( "|",   &is_symbol )
endAugment

