module Froley
  uses ParseKit<<Froley>>

class FroleyTokenizer : Tokenizer
  METHODS
    method init
      ScanRules[ '@' ] = ScanRule( "@",
        function (tokenizer:FroleyTokenizer)
          use builder = StringBuilder.pool
            while (tokenizer.has_another and tokenizer.peek != ' ' and tokenizer.peek != '\n')
              builder.print( tokenizer.read )
            endWhile
            tokenizer.tokens.add( Token(TokenType.TAG,builder->String) )
          endUse
        endFunction
      )

    method consume_whitespace->Logical
      return consume_spaces

    method on_identifier( name:String )
      tokens.add( Token(TokenType.IDENTIFIER,name) )

    method on_integer( value:Int64 )
      tokens.add( Token(TokenType.INTEGER,value) )

    method on_string( value:String )
      tokens.add( Token(TokenType.STRING,value) )

    method tokenize_string->Logical
      if (prior.tokenize_string) return true
      local ch = peek
      if (ch != '\'') return false
      local st = scan_string( '\'' )
      if (st.count == 1) tokens.add( Token(TokenType.INTEGER,st[0]->Int64) )
      else               on_string( st )
      return true
endClass

